{"version":3,"sources":["components/Box.js","utils/helpers.js","components/NewBoxForm.js","components/BoxList.js","App.js","index.js"],"names":["BoxContainer","styled","div","BoxWrapper","props","backgroundColor","width","height","Icon","i","Box","id","removeBox","className","onClick","e","target","getRandomColor","color","Math","floor","random","getRandomDimension","NewBoxFormWrapper","form","InputGroup","Label","label","Input","input","ButtonContainer","Button","button","NewBoxForm","addBox","useState","properties","setProperties","handleChange","name","value","prevState","onSubmit","preventDefault","htmlFor","type","onChange","randomBox","BoxesContainer","BoxList","uuid","boxList","setBoxList","newBoxList","filter","box","renderBoxes","map","newBox","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2b13475.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst BoxContainer = styled.div`\r\n  min-width: 100px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n`\r\nconst BoxWrapper = styled.div`\r\n  background-color: ${props => props.backgroundColor};\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  margin: 5px;\r\n`\r\nconst Icon = styled.i`\r\n  background-color: #f1f1f1;\r\n  padding: 5px;\r\n  border-radius: 3px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n  }\r\n`\r\n\r\nexport default function Box({ height, width, backgroundColor, id, removeBox }) {\r\n  const handleClick = e => {\r\n    removeBox(e.target.id)\r\n  }\r\n  return (\r\n    <BoxContainer>\r\n      <BoxWrapper\r\n        height={height}\r\n        width={width}\r\n        backgroundColor={backgroundColor}\r\n      ></BoxWrapper>\r\n      <Icon className='far fa-trash-alt' onClick={handleClick} id={id}></Icon>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","function getRandomColor() {\r\n  var letters = '0123456789ABCDEF'\r\n  var color = '#'\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)]\r\n  }\r\n  return color\r\n}\r\n\r\nfunction getRandomDimension() {\r\n  return Math.floor(Math.random() * 350 + 1)\r\n}\r\n\r\nexport { getRandomColor, getRandomDimension }\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { getRandomColor, getRandomDimension } from '../utils/helpers'\r\n\r\nconst NewBoxFormWrapper = styled.form`\r\n  margin: 20px;\r\n  width: 400px;\r\n`\r\nconst InputGroup = styled.div`\r\n  margin: 10px;\r\n`\r\nconst Label = styled.label`\r\n  display: inline-block;\r\n  width: 40%;\r\n`\r\nconst Input = styled.input`\r\n  padding: 5px;\r\n  width: 60%;\r\n`\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  padding: 3px;\r\n  margin: 5px;\r\n`\r\n\r\nexport default function NewBoxForm({ addBox }) {\r\n  const [properties, setProperties] = useState({\r\n    backgroundColor: '',\r\n    height: '',\r\n    width: '',\r\n  })\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target\r\n    setProperties(prevState => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    addBox(properties)\r\n  }\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault()\r\n    const randomBox = {\r\n      backgroundColor: getRandomColor(),\r\n      height: getRandomDimension(),\r\n      width: getRandomDimension(),\r\n    }\r\n    setProperties(randomBox)\r\n    addBox(randomBox)\r\n  }\r\n\r\n  return (\r\n    <NewBoxFormWrapper onSubmit={handleSubmit}>\r\n      <InputGroup>\r\n        <Label htmlFor='background-color'>Background Color</Label>\r\n        <Input\r\n          type='text'\r\n          id='background-color'\r\n          name='backgroundColor'\r\n          value={properties.backgroundColor}\r\n          onChange={handleChange}\r\n        />\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <Label htmlFor='width'>Width</Label>\r\n        <Input\r\n          type='text'\r\n          id='width'\r\n          name='width'\r\n          value={properties.width}\r\n          onChange={handleChange}\r\n        />\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <Label htmlFor='height'>Height</Label>\r\n        <Input\r\n          type='text'\r\n          id='height'\r\n          name='height'\r\n          value={properties.height}\r\n          onChange={handleChange}\r\n        />\r\n      </InputGroup>\r\n      <ButtonContainer>\r\n        <Button>Add Box!</Button>\r\n        <Button onClick={handleClick}>Add random Box!</Button>\r\n      </ButtonContainer>\r\n    </NewBoxFormWrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Box from './Box'\r\nimport NewBoxForm from './NewBoxForm'\r\nimport { v4 as uuid } from 'uuid'\r\nimport styled from 'styled-components'\r\n\r\nconst BoxesContainer = styled.div`\r\n  min-width: 100%;\r\n  display: flex;\r\n  flex-flow: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n`\r\n\r\nexport default function BoxList() {\r\n  const [boxList, setBoxList] = useState([\r\n    { backgroundColor: 'red', height: '120', width: '200', id: uuid() },\r\n    { backgroundColor: 'blue', height: '100', width: '75', id: uuid() },\r\n    { backgroundColor: 'orange', height: '175', width: '100', id: uuid() },\r\n  ])\r\n  const addBox = newBox => {\r\n    setBoxList(prevState => [...prevState, { ...newBox, id: uuid() }])\r\n  }\r\n  const removeBox = id => {\r\n    const newBoxList = boxList.filter(box => box.id !== id)\r\n    setBoxList(newBoxList)\r\n  }\r\n  const renderBoxes = boxList.map(box => (\r\n    <Box\r\n      height={box.height}\r\n      width={box.width}\r\n      backgroundColor={box.backgroundColor}\r\n      key={box.id}\r\n      id={box.id}\r\n      removeBox={removeBox}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <NewBoxForm addBox={addBox} />\r\n      <BoxesContainer>{renderBoxes}</BoxesContainer>\r\n    </div>\r\n  )\r\n}\r\n","import BoxList from './components/BoxList'\n\nfunction App() {\n  return (\n    <div>\n      <BoxList />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  *, *::before, *::after {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    word-wrap: break-word;\n  };\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}